##################################33 F1 for clasees 
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Provided data
data = [
    {'Method': 'TFIDF', 'Class Number': 2, 'Performance': val} for val in [92, 85, 88, 90, 89, 91]
] + [
    {'Method': 'TFIDF', 'Class Number': 3, 'Performance': val} for val in [57, 68, 69, 64, 67, 66]
] + [
    {'Method': 'TFIDF', 'Class Number': 4, 'Performance': val} for val in [40, 57, 54, 55, 46, 52]
] + [
    {'Method': 'TFIDF', 'Class Number': 5, 'Performance': val} for val in [46, 60, 60, 59, 51, 55]
] + [
    {'Method': 'TFIDF', 'Class Number': 6, 'Performance': val} for val in [38, 49, 46, 49, 40, 47]
] + [
    {'Method': 'LSI', 'Class Number': 2, 'Performance': val} for val in [92, 70, 87, 91, 90, 59]
] + [
    {'Method': 'LSI', 'Class Number': 3, 'Performance': val} for val in [57, 44, 67, 64, 63, 54]
] + [
    {'Method': 'LSI', 'Class Number': 4, 'Performance': val} for val in [38, 33, 54, 50, 44, 46]
] + [
    {'Method': 'LSI', 'Class Number': 5, 'Performance': val} for val in [47, 41, 59, 51, 49, 58]
] + [
    {'Method': 'LSI', 'Class Number': 6, 'Performance': val} for val in [40, 34, 46, 43, 40, 41]
] + [
    {'Method': 'MiniLm', 'Class Number': 2, 'Performance': val} for val in [89, 89, 87, 82, 82, 87]
] + [
    {'Method': 'MiniLm', 'Class Number': 3, 'Performance': val} for val in [60, 62, 69, 62, 66, 68]
] + [
    {'Method': 'MiniLm', 'Class Number': 4, 'Performance': val} for val in [49, 52, 52, 52, 53, 53]
] + [
    {'Method': 'MiniLm', 'Class Number': 5, 'Performance': val} for val in [52, 54, 57, 56, 52, 59]
] + [
    {'Method': 'MiniLm', 'Class Number': 6, 'Performance': val} for val in [41, 43, 43, 46, 42, 48]
] + [
    {'Method': 'RoBERTa', 'Class Number': 2, 'Performance': val} for val in [76, 85, 42, 84, 86, 89]
] + [
    {'Method': 'RoBERTa', 'Class Number': 3, 'Performance': val} for val in [55, 60, 37, 65, 66, 66]
] + [
    {'Method': 'RoBERTa', 'Class Number': 4, 'Performance': val} for val in [45, 50, 18, 52, 51, 55]
] + [
    {'Method': 'RoBERTa', 'Class Number': 5, 'Performance': val} for val in [50, 57, 17, 58, 55, 57]
] + [
    {'Method': 'RoBERTa', 'Class Number': 6, 'Performance': val} for val in [41, 47, 16, 46, 42, 47]
] + [
    {'Method': 'BERT', 'Class Number': 2, 'Performance': val} for val in [67,81,90,84,69,88]
] + [
    {'Method': 'BERT', 'Class Number': 3, 'Performance': val} for val in [49,60,63,68,63,67]
] + [
    {'Method': 'BERT', 'Class Number': 4, 'Performance': val} for val in [44,47,50,51,48,52]
] + [
    {'Method': 'BERT', 'Class Number': 5, 'Performance': val} for val in [49,55,54,54,53,55]
] + [
    {'Method': 'BERT', 'Class Number': 6, 'Performance': val} for val in [41,44,41,46,39,45]
]



# Create DataFrame
df = pd.DataFrame(data)
black_palette = ['#2a2a2b', '#4f4f50', '#777878', '#a2a3a3','#d0d0d0','#ffffff']

# Plotting
plt.figure(figsize=(12, 6))
sns.boxplot(data=df, x='Class Number', y='Performance', hue='Method', palette=black_palette)
plt.title('Performance Across Methods and Class Numbers')
plt.xlabel('Class Number', fontsize=16)
plt.ylabel('Performance', fontsize=16)
plt.legend(title='Method', fontsize=14) 
plt.ylim(0, 100)  # Set y-axis limits

plt.show()




##################F1 Graph


import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Create data for each method
# Create data for each method
data = {
    'method': ['TFIDF']*5 + ['LSI']*5 + ['MiniLM']*5 + ['Roberta']*5 + ['BERT']*5,
    'knn': [92,57,40,46,38, 92,57,38,47,40, 89,60,49,52,41, 76,55,45,50,41, 67,49,44,49,41],
    'nb':  [85,68,57,60,49, 44,33,41,34,70, 62,52,54,43,89, 60,50,57,47,85, 81,60,47,55,44],
    'svm': [69,54,60,46,88, 54,59,46,87,67, 52,57,43,69,87, 18,17,16,42,37, 90,63,50,54,41],
    'rf':  [55,59,49,90,64, 51,43,91,64,50, 56,46,82,62,52, 58,46,84,65,52, 84,68,51,54,46],
    'dt':  [51,40,89,67,46, 40,90,63,44,49, 42,82,60,53,52, 42,86,66,51,55, 69,63,48,53,39],
    'nn':  [47,91,66,52,55, 59,54,46,58,41, 87,68,53,59,48, 89,66,55,57,47, 88,67,52,55,45]
}

import plotly.express as px
import pandas as pd

# Convert to DataFrame
df = pd.DataFrame(data)

# Melt the DataFrame
df_melt = df.melt(id_vars='method', var_name='classifier', value_name='score')

# Define shades of black
black_shades = ['#010203', '#2a2a2b', '#4f4f50', '#777878', '#a2a3a3']

# Create the box plot with custom color palette
fig = px.box(df_melt, x='method', y='score', color='classifier', title='Box Plot F1',
             color_discrete_sequence=black_shades)

# Customizing appearance
fig.update_traces(boxmean=True)  # Show mean
fig.update_layout(boxgap=0.1)  # Set the gap between boxes
fig.update_xaxes(title_text='Methods', showgrid=True)
fig.update_yaxes(title_text='Scores', showgrid=True, range=[0, 100])

fig.show()


#####################################################################################################


import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
data = {
    'method': ['TFIDF']*5 + ['LSI']*5 + ['MiniLM']*5 + ['Roberta']*5 + ['BERT']*5,
    'knn': [92,57,40,46,38, 92,57,38,47,40, 89,60,49,52,41, 76,55,45,50,41, 67,49,44,49,41],
    'nb':  [85,68,57,60,49, 44,33,41,34,70, 62,52,54,43,89, 60,50,57,47,85, 81,60,47,55,44],
    'svm': [69,54,60,46,88, 54,59,46,87,67, 52,57,43,69,87, 18,17,16,42,37, 90,63,50,54,41],
    'rf':  [55,59,49,90,64, 51,43,91,64,50, 56,46,82,62,52, 58,46,84,65,52, 84,68,51,54,46],
    'dt':  [51,40,89,67,46, 40,90,63,44,49, 42,82,60,53,52, 42,86,66,51,55, 69,63,48,53,39],
    'nn':  [47,91,66,52,55, 59,54,46,58,41, 87,68,53,59,48, 89,66,55,57,47, 88,67,52,55,45]
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Melt the DataFrame
df_melt = df.melt(id_vars='method', var_name='classifier', value_name='score')

# Define a custom color palette with shades of black
black_palette = ['#010203', '#2a2a2b', '#4f4f50', '#777878', '#a2a3a3']
black_palette = ['#2a2a2b', '#4f4f50', '#777878', '#a2a3a3','#d0d0d0','#ffffff']

# Box plot using Seaborn with custom color palette
plt.figure(figsize=(10, 6))
sns.boxplot(data=df_melt, x='method', y='score', hue='classifier', palette=black_palette)
plt.title('Box Plot F1', fontsize=16)  # Adjusting title font size
plt.xlabel('Methods', fontsize=16)  # Adjusting x-axis label font size
plt.ylabel('Scores', fontsize=16)  # Adjusting y-axis label font size
plt.legend(title='Classifier', fontsize=14)  # Adjusting legend font size
plt.ylim(0, 100)  # Set y-axis limits

# Save plot to PDF
plt.savefig('boxplot.pdf', format='pdf')

plt.show()




####################################################################################################################################################################


P_TFIDF_numbers = [92, 68, 49, 56, 43, 91, 80, 70, 73, 59, 94, 76, 63, 68, 50, 93, 67, 62, 67, 55, 92, 77, 54, 60, 46, 94, 74, 60, 63, 53]
P_LSI_numbers =  [93, 72, 44, 53, 48, 77, 53, 35, 51, 38, 93, 75, 63, 67, 50, 94, 67, 57, 57, 47, 93, 71, 53, 57, 45, 61, 60, 50, 64, 46]
P_MiniLm_numbers = [92, 64, 58, 65, 49, 92, 67, 57, 60, 48, 92, 77, 61, 66, 47, 90, 66, 60, 62, 52, 86, 72, 61, 59, 46, 92, 70, 60, 65, 53]
P_ROBERTA_numbers =[77, 63, 55, 58, 48, 89, 66, 57, 62, 51, 41, 46, 21, 15, 16, 90, 70, 59, 63, 52, 89, 71, 58, 61, 45, 92, 71, 61, 66, 51]

P_BERT_numbers = [52, 50, 57, 48, 70, 68, 55, 63, 50, 86, 71, 63, 68, 49, 92, 71, 61, 62, 51, 90, 70, 56, 61, 43, 78, 73, 61, 63, 49, 92]


R_TFIDF_numbers = [91, 59, 42, 49, 43, 86, 71, 60, 63, 53, 90, 71, 54, 61, 50, 90, 66, 55, 59, 50, 89, 68, 47, 51, 41, 91, 68, 53, 56, 49]
R_LSI_numbers = [92, 59, 41, 50, 45, 72, 52, 42, 44, 39, 89, 69, 54, 59, 50, 92, 66, 50, 52, 45, 91, 64, 45, 50, 42, 59, 55, 47, 58, 44]
R_Minilm_numbers =[90, 62, 51, 53, 43, 89, 64, 52, 54, 44, 88, 70, 52, 57, 48, 84, 63, 53, 56, 48, 83, 68, 53, 52, 44, 88, 69, 53, 61, 49]
R_ROBERTA_numbers = [76, 57, 47, 52, 44, 86, 62, 50, 58, 48, 55, 47, 29, 30, 28, 85, 67, 52, 59, 47, 87, 67, 51, 54, 45, 90, 68, 55, 58, 50]
R_BERT_numbers = [50, 45, 52, 45, 68, 61, 47, 54, 45, 82, 65, 50, 55, 45, 91, 69, 51, 54, 47, 85, 63, 47, 52, 41, 71, 68, 52, 57, 47, 89]
F1_TFIDF_numbers = [92, 57, 40, 46, 38, 85, 68, 57, 60, 49, 88, 69, 54, 60, 46, 90, 64, 55, 59, 49, 89, 67, 46, 51, 40, 91, 66, 52, 55, 47]
F1_LSI_numbers = [92, 57, 38, 47, 40, 70, 44, 33, 41, 34, 87, 67, 54, 59, 46, 91, 64, 50, 51, 43, 90, 63, 44, 49, 40, 59, 54, 46, 58, 41]
F1_Minilm_numbers = [89, 60, 49, 52, 41, 89, 62, 52, 54, 43, 87, 69, 52, 57, 43, 82, 62, 52, 56, 46, 82, 66, 53, 52, 42, 87, 68, 53, 59, 48]
F1_ROBERTA_numbers = [76, 55, 45, 50, 41, 85, 60, 50, 57, 47, 42, 37, 18, 17, 16, 84, 65, 52, 58, 46, 86, 66, 51, 55, 42, 89, 66, 55, 57, 47]
F1_BERT_numbers =  [49, 44, 49, 41, 67, 60, 47, 55, 44, 81, 63, 50, 54, 41, 90, 68, 51, 54, 46, 84, 63, 48, 53, 39, 69, 67, 52, 55, 45, 88]
AUC_TFIDF_numbers = [94, 76, 67, 74, 76, 86, 80, 76, 81, 82, 99, 85, 74, 82, 83, 99, 81, 76, 81, 81, 89, 77, 71, 75, 75, 98, 81, 79, 84, 83]
AUC_LSI_numbers = [92, 78, 65, 74, 76, 74, 77, 73, 77, 80, 98, 85, 76, 82, 82, 93, 80, 72, 79, 80, 91, 75, 68, 74, 75, 78, 76, 76, 83, 82]
AUC_Minilm_numbers = [92, 80, 74, 78, 79, 93, 79, 75, 81, 81, 99, 85, 75, 83, 83, 97, 79, 74, 80, 79, 83, 77, 73, 76, 76, 98, 82, 79, 85, 85]
AUC_ROBERTA_numbers = [85, 74, 67, 75, 76, 89, 80, 76, 83, 82, 43, 69, 52, 67, 64, 98, 80, 74, 80, 80, 87, 76, 72, 77, 77, 97, 81, 78, 83, 84]
AUC_BERT_numbers = [72, 67, 75, 76, 80, 76, 73, 81, 81, 86, 85, 77, 83, 83, 97, 78, 74, 80, 79, 95, 73, 69, 75, 75, 71, 82, 78, 83, 84, 98]





import plotly.express as px
import pandas as pd

# Create data for each method
data = {
    'Method': ['TFIDF']*30 + ['LSI']*30 + ['MiniLM']*30 + ['Roberta']*30 + ['BERT']*30,
    'Precision': P_TFIDF_numbers + P_LSI_numbers + P_MiniLm_numbers + P_ROBERTA_numbers + P_BERT_numbers,
    'Recall': R_TFIDF_numbers + R_LSI_numbers + R_Minilm_numbers + R_ROBERTA_numbers + R_BERT_numbers,
    'F1': F1_TFIDF_numbers + F1_LSI_numbers + F1_Minilm_numbers + F1_ROBERTA_numbers + F1_BERT_numbers,
    'AUC': AUC_TFIDF_numbers + AUC_LSI_numbers + AUC_Minilm_numbers + AUC_ROBERTA_numbers + AUC_BERT_numbers
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Melt the DataFrame to have metrics in one column
df_melted = df.melt(id_vars='Method', var_name='Metric', value_name='value')

# Create a box plot for each metric
fig = px.box(df_melted, x='Method', y='value', facet_col='Metric', color='Method')

# Show the plot
fig.show()



import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt


df = pd.DataFrame(data)
# Melt the DataFrame to have metrics in one column
# df_melted = df.melt(id_vars='method', var_name='metric', value_name='value')

# Define a custom color palette
black_palette = ['#2a2a2b', '#4f4f50', '#777878', '#a2a3a3', '#d0d0d0', '#ffffff']

df_melted = df.melt(id_vars='Method', var_name='metric', value_name='value')

# Create a boxplot with different colors for each method
plt.figure(figsize=(10, 6))
sns.boxplot(x='metric', y='value', hue='Method', data=df_melted, palette=black_palette)
plt.title('Boxplot of Values', fontsize=16)  # Adjusting title font size
plt.xlabel('Metric', fontsize=18)  # Adjusting x-axis label font size
plt.ylabel('Values', fontsize=18)  # Adjusting y-axis label font size
plt.legend(title='Method', fontsize=14)  # Adjusting legend font size
plt.xticks(fontsize=14)  # Adjusting x-axis tick font size
plt.show()




