##################F1 Graph

import plotly.express as px
import pandas as pd

# Create sample data for each method

data = {
    'method': ['TFIDF']*5 + ['LSI']*5 + ['MiniLM']*5 + ['Roberta']*5 + ['BERT']*5,
    'knn': [92,60,49,46,35, 92,58,51,50,37, 89,59,42,35,32, 76,51,41,41,30, 67,43,43,45,30],
    'nb':  [83,63,49,47,35, 42,27,27,23,70, 63,45,48,38,89, 59,41,47,37,85, 81,56,38,44,34],
    'svm': [57,47,41,32,88, 46,40,31,87,56, 45,47,35,56,87, 19,14,10,42,29, 90,54,39,39,30],
    'rf':  [47,51,35,95,62, 34,26,84,58,38, 46,27,87,53,42, 47,30,85,58,42, 85,60,44,47,33],
    'dt':  [40,29,94,60,51, 31,91,62,40,33, 29,81,59,44,40, 30,86,58,47,39, 69,59,45,44,31],
    'nn':  [31,91,61,44,44, 57,52,38,34,30, 86,54,44,49,35, 89,62,46,46,34, 88,64,48,48,39]
}
# Convert data dictionary to a DataFrame
df = pd.DataFrame(data)

# Melt the DataFrame to have classifiers and scores in separate columns
df_melt = df.melt(id_vars=['method'], var_name='classifier', value_name='score')

# Create the box plot
fig = px.box(df_melt, x='method', y='score', color='classifier', title='Box Plot F1')
fig.update_xaxes(title_text='Methods')
fig.update_yaxes(title_text='Scores Not Balanced')

# Display the plot
fig.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Create data for each method
data = {
    'method': ['TFIDF']*5 + ['LSI']*5 + ['MiniLM']*5 + ['Roberta']*5 + ['BERT']*5,
    'knn': [92,60,49,46,35, 92,58,51,50,37, 89,59,42,35,32, 76,51,41,41,30, 67,43,43,45,30],
    'nb':  [83,63,49,47,35, 42,27,27,23,70, 63,45,48,38,89, 59,41,47,37,85, 81,56,38,44,34],
    'svm': [57,47,41,32,88, 46,40,31,87,56, 45,47,35,56,87, 19,14,10,42,29, 90,54,39,39,30],
    'rf':  [47,51,35,95,62, 34,26,84,58,38, 46,27,87,53,42, 47,30,85,58,42, 85,60,44,47,33],
    'dt':  [40,29,94,60,51, 31,91,62,40,33, 29,81,59,44,40, 30,86,58,47,39, 69,59,45,44,31],
    'nn':  [31,91,61,44,44, 57,52,38,34,30, 86,54,44,49,35, 89,62,46,46,34, 88,64,48,48,39]
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Melt the DataFrame to have classifiers and scores in separate columns
df_melt = df.melt(id_vars=['method'], var_name='classifier', value_name='score')

# Create a boxplot with different colors for each classifier
plt.figure(figsize=(10, 6))
sns.boxplot(x='method', y='score', hue='classifier', data=df_melt, palette='Set3')
# plt.title('Box Plot F1')
plt.xlabel('Methods')
plt.ylabel('Scores')

# Set y-ticks
plt.yticks(range(0, 101, 10))


# Show the plot
plt.tight_layout()  # Adjust spacing
plt.show()



####################################################################################################################################################################


P_TFIDF_numbers = [
    92, 64, 57, 57, 41,
    91, 76, 65, 57, 41,
    94, 64, 58, 50, 38,
    96, 67, 50, 56, 36,
    95, 67, 58, 47, 33,
    94, 63, 48, 45, 29
]
P_LSI_numbers =  [
    93, 61, 62, 59, 42,
    77, 47, 32, 32, 22,
    93, 63, 58, 49, 38,
    90, 64, 43, 38, 27,
    94, 68, 46, 36, 31,
    60, 54, 40, 35, 34
]
P_MiniLm_numbers = [
    92, 68, 51, 46, 36,
    92, 69, 51, 53, 40,
    92, 63, 54, 55, 37,
    92, 58, 48, 55, 32,
    85, 63, 53, 49, 33,
    90, 57, 46, 52, 40
]
P_ROBERTA_numbers =[
    77, 53, 43, 46, 29,
    89, 62, 44, 50, 38,
    41, 34, 19, 14, 11,
    89, 61, 45, 50, 31,
    90, 60, 53, 42, 31,
    92, 65, 47, 46, 34
]

P_BERT_numbers = [
    45, 48, 51, 30, 70,
    62, 41, 47, 36, 86,
    55, 42, 45, 33, 92,
    63, 52, 55, 35, 90,
    63, 52, 48, 34, 80,
    69, 51, 51, 41, 92
]


R_TFIDF_numbers = [
    91, 63, 51, 49, 40,
    85, 67, 52, 51, 42,
    90, 60, 50, 45, 37,
    95, 64, 50, 54, 41,
    94, 62, 52, 41, 34,
    91, 62, 47, 46, 38
]
R_LSI_numbers = [
    92, 61, 53, 51, 40,
    72, 49, 35, 34, 32,
    89, 58, 49, 44, 37,
    85, 61, 42, 38, 32,
    92, 63, 42, 37, 34,
    57, 53, 42, 36, 34
    ]
R_Minilm_numbers = [
    90, 64, 46, 39, 38,
    89, 65, 49, 51, 42,
    88, 58, 48, 49, 41,
    88, 56, 46, 49, 33,
    82, 60, 45, 42, 32,
    87, 57, 47, 51, 40
    
    
]
R_ROBERTA_numbers = [
    76, 54, 43, 43, 35,
    86, 60, 44, 50, 41,
    55, 42, 31, 25, 21,
    86, 60, 45, 51, 36,
    87, 59, 48, 41, 33,
    90, 64, 50, 50, 42
    ]
R_BERT_numbers = [
    46, 46, 46, 34, 68,
    57, 42, 47, 39, 82,
    57, 43, 43, 36, 91,
    62, 47, 50, 38, 86,
    59, 46, 45, 35, 72,
    66, 51, 49, 44, 89
]
F1_TFIDF_numbers = [
   92, 60, 49, 46, 35,
    83, 63, 49, 47, 35,
    88, 57, 47, 41, 32,
    95, 62, 47, 51, 35,
    94, 60, 51, 40, 29,
    91, 61, 44, 44, 31
    
    ]
F1_LSI_numbers = [
    92, 58, 51, 50, 37,
    70, 42, 27, 27, 23,
    87, 56, 46, 40, 31,
    84, 58, 38, 34, 26,
    91, 62, 40, 33, 31,
    57, 52, 38, 34, 30
    ]
F1_Minilm_numbers = [
    89, 59, 42, 35, 32,
    89, 63, 45, 48, 38,
    87, 56, 45, 47, 35,
    87, 53, 42, 46, 27,
    81, 58, 44, 40, 29,
    86, 54, 44, 49, 35   
    
]
F1_ROBERTA_numbers = [
    76, 51, 41, 41, 30,
    85, 59, 41, 47, 37,
    42, 29, 19, 14, 10,
    85, 58, 42, 47, 30,
    86, 58, 47, 39, 30,
    89, 62, 46, 46, 34
]
F1_BERT_numbers = [
   43, 43, 45, 30, 67,
    56, 38, 44, 34, 81,
    54, 39, 39, 30, 90,
    60, 44, 47, 33, 85,
    59, 45, 44, 31, 69,
    64, 48, 48, 39, 88
]
AUC_TFIDF_numbers = [
   94, 82, 76, 77, 77,
    85, 78, 71, 71, 70,
    99, 83, 72, 76, 77,
    99, 83, 77, 78, 76,
    94, 78, 74, 70, 67,
    98, 84, 78, 77, 76
]
AUC_LSI_numbers = [
    
    92, 80, 76, 76, 75,
    74, 75, 70, 69, 71,
    98, 83, 74, 76, 76,
    93, 81, 74, 73, 71,
    92, 77, 66, 67, 68,
    76, 80, 74, 74, 75
]
AUC_Minilm_numbers = [
    92, 80, 74, 74, 72,
    93, 82, 76, 78, 78,
    99, 80, 74, 80, 80,
    97, 81, 76, 77, 75,
    82, 75, 69, 71, 67,
    97, 84, 79, 80, 80
    
    
    ]
AUC_ROBERTA_numbers = [
    85, 75, 69, 71, 72,
    89, 80, 74, 78, 78,
    55, 69, 68, 71, 73,
    97, 82, 76, 77, 76,
    87, 74, 71, 68, 67,
    97, 84, 79, 80, 82,
 ]
AUC_BERT_numbers = [
    72, 68, 69, 68, 80,
    77, 72, 76, 77, 86,
    81, 75, 79, 78, 97,
    81, 76, 76, 75, 96,
    73, 70, 71, 69, 72,
    85, 78, 80, 81, 98
]


# data = {
#     'method': ['TFIDF']*30 + ['LSI']*30 + ['MiniLM']*30 + ['Roberta']*30 + ['BERT']*30,
#     'P': P_TFIDF_numbers + P_LSI_numbers + P_MiniLm_numbers + P_ROBERTA_numbers + P_BERT_numbers,
#     'R': R_TFIDF_numbers + R_LSI_numbers + R_Minilm_numbers + R_ROBERTA_numbers + R_BERT_numbers,
#     'F1': F1_TFIDF_numbers + F1_LSI_numbers + F1_Minilm_numbers + F1_ROBERTA_numbers + F1_BERT_numbers,
#     'AUC': AUC_TFIDF_numbers + AUC_LSI_numbers + AUC_Minilm_numbers + AUC_ROBERTA_numbers + AUC_BERT_numbers
# }





import plotly.express as px
import pandas as pd

# Create data for each method
data = {
    'method': ['TFIDF']*30 + ['LSI']*30 + ['MiniLM']*30 + ['Roberta']*30 + ['BERT']*30,
    'Precision': P_TFIDF_numbers + P_LSI_numbers + P_MiniLm_numbers + P_ROBERTA_numbers + P_BERT_numbers,
    'Recall': R_TFIDF_numbers + R_LSI_numbers + R_Minilm_numbers + R_ROBERTA_numbers + R_BERT_numbers,
    'F1': F1_TFIDF_numbers + F1_LSI_numbers + F1_Minilm_numbers + F1_ROBERTA_numbers + F1_BERT_numbers,
    'AUC': AUC_TFIDF_numbers + AUC_LSI_numbers + AUC_Minilm_numbers + AUC_ROBERTA_numbers + AUC_BERT_numbers
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Melt the DataFrame to have metrics in one column
df_melted = df.melt(id_vars='method', var_name='metric', value_name='value')

# Create a box plot for each metric
fig = px.box(df_melted, x='method', y='value', facet_col='metric', color='method')

# Show the plot
fig.show()


import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Melt the DataFrame to have metrics in one column
df_melted = df.melt(id_vars='method', var_name='metric', value_name='value')

# Create a boxplot with different colors for each method
plt.figure(figsize=(10, 6))
sns.boxplot(x='metric', y='value', hue='method', data=df_melted, palette='Set3')
# plt.title('Boxplot of values')
plt.show()